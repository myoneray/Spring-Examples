<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/data/jpa
		http://www.springframework.org/schema/data/jpa/spring-jpa.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd">

    <!-- import the dataSource definition -->
    <import resource="datasource-config.xml"/>
    <import resource="spring-security.xml" />

    <context:component-scan
            base-package="com.javachen.examples.springmvc.petclinic.service"/>

    <!-- Configurer that replaces ${...} placeholders with values from a properties file -->
    <!-- (in this case, JDBC-related settings for the JPA EntityManager definition below) -->
    <context:property-placeholder location="classpath:spring/data-access.properties"/>

    <!-- enables scanning for @Transactional annotations -->
    <tx:annotation-driven/>

    <beans profile="jpa,spring-data-jpa">
        <!-- JPA EntityManagerFactory -->
        <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
            <property name="dataSource" ref="dataSource"/>
            <property name="jpaVendorAdapter" ref="jpaVendorAdapter"/>
            <!-- gDickens: BOTH Persistence Unit and Packages to Scan are NOT compatible, persistenceUnit will win -->
            <property name="persistenceUnitName" value="petclinic"/>
            <property name="packagesToScan" value="com.javachen.examples.springmvc.petclinic.model"/>
            <property name="jpaPropertyMap" ref="jpaPropertyMap"/>
        </bean>

        <bean id="jpaVendorAdapter" class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
            <property name="generateDdl" value="false" />
            <property name="showSql" value="${jpa.showSql}" />
            <property name="database" value="${jpa.database}"/>
        </bean>

        <util:map id="jpaPropertyMap">
            <entry key="hibernate.hbm2ddl.auto" value="create"/>
            <entry key="hibernate.cache.use_second_level_cache" value="false"/>
            <entry key="hibernate.cache.use_query_cache" value="false"/>
            <entry key="hibernate.generate_statistics" value="false"/>
            <entry key="format_sql" value="true"/>
        </util:map>

        <!-- Transaction manager for a single JPA EntityManagerFactory (alternative to JTA) -->
        <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
            <property name="entityManagerFactory" ref="entityManagerFactory"/>
        </bean>
        <!--
            Post-processor to perform exception translation on @Repository classes (from native
            exceptions such as JPA PersistenceExceptions to Spring's DataAccessException hierarchy).
        -->
        <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    </beans>

    <beans profile="jdbc">
        <!-- Transaction manager for a single JDBC DataSource (alternative to JTA) -->
        <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
            <property name="dataSource" ref="dataSource"/>
        </bean>

        <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
            <constructor-arg ref="dataSource"/>
        </bean>

        <bean id="namedParameterJdbcTemplate"
              class="org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate">
            <constructor-arg ref="dataSource"/>
        </bean>

        <context:component-scan base-package="com.javachen.examples.springmvc.petclinic.repository.jdbc"/>
    </beans>

    <beans profile="jpa">
        <!--
            Will automatically be transactional due to @Transactional.
            EntityManager will be auto-injected due to @PersistenceContext.
            PersistenceExceptions will be auto-translated due to @Repository.
        -->
        <context:component-scan base-package="com.javachen.examples.springmvc.petclinic.repository.jpa"/>
    </beans>

    <beans profile="spring-data-jpa">
        <jpa:repositories base-package="com.javachen.examples.springmvc.petclinic.repository.springdatajpa"/>
        <!-- Custom configuration for the custom implementation based on JPA -->
        <bean id="owerRepository"
              class="com.javachen.examples.springmvc.petclinic.repository.springdatajpa.JpaOwnerRepositoryImpl"/>

        <!--
        Post-processor to perform exception translation on @Repository classes
        (from native exceptions such as JPA PersistenceExceptions to Spring's DataAccessException
        hierarchy).
        -->
        <bean name="exceptionTranslation"
              class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
    </beans>
</beans>