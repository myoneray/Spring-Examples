<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:oxm="http://www.springframework.org/schema/oxm"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/oxm
         http://www.springframework.org/schema/oxm/spring-oxm.xsd
         http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="templateResolver"
          class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
        <property name="prefix" value="/WEB-INF/thymeleaf/"/>
        <property name="suffix" value=".html"/>
        <property name="templateMode" value="HTML5"/>
        <property name="characterEncoding" value="utf-8" />
        <!-- Template cache is set to false (default is true).        -->
        <property name="cacheable" value="false"/>
    </bean>

    <bean id="templateEngine" class="org.thymeleaf.spring3.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver"/>
        <property name="messageSource" ref="messageSource"></property>
        <property name="additionalDialects">
            <set>
            </set>
        </property>
    </bean>

    <!--
    - The ContentNegotiatingViewResolver delegates to the InternalResourceViewResolver and BeanNameViewResolver,
    - and uses the requested media type (determined by the path extension) to pick a matching view. 
    - When the media type is 'text/html', it will delegate to the InternalResourceViewResolver's JstlView, 
    - otherwise to the BeanNameViewResolver.
    -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="contentNegotiationManager" ref="cnManager"/>
        <property name="viewResolvers">
            <list>
                <bean class="org.thymeleaf.spring3.view.ThymeleafViewResolver">
                    <property name="templateEngine" ref="templateEngine"/>
                    <property name="order" value="1"/>
                    <!-- We need to set exclusions because Content Negotiation tries to resolve from -->
                    <!-- Thymeleaf even if a specific view bean (of a different class) is already    -->
                    <!-- found, which might cause exceptions (e.g. ThymeleafView does not have a     -->
                    <!-- 'marshaller' property).                                                     -->
                    <property name="excludedViewNames" value="*.xml"/>
                    <property name="characterEncoding" value="utf-8"/>
                </bean>

                <!-- Used here for 'xml' and 'atom' views  -->
                <bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
                    <property name="order" value="2"/>
                </bean>

                <!-- Default viewClass: JSTL view (JSP with html output) -->
                <!--                 <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->
                <!--                     Example: a logical view name of 'vets' is mapped to '/WEB-INF/jsp/vets.jsp' -->
                <!--                     <property name="prefix" value="/WEB-INF/jsp/"/> -->
                <!--                     <property name="suffix" value=".jsp"/> -->
                <!--                     <property name="order" value="3"/> -->
                <!--                 </bean> -->

            </list>
        </property>
    </bean>

    <!-- Simple strategy: only path extension is taken into account -->
    <bean id="cnManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="favorPathExtension" value="true"/>
        <property name="ignoreAcceptHeader" value="true"/>
        <property name="defaultContentType" value="text/html"/>

        <property name="mediaTypes">
            <map>
                <entry key="html" value="text/html"/>
                <entry key="xml" value="application/xml"/>
                <entry key="atom" value="application/atom+xml"/>
            </map>
        </property>
    </bean>

    <!-- Renders an Atom feed of the visits. Used by the BeanNameViewResolver  -->
    <bean name="vets/vetList.atom" class="com.javachen.examples.springmvc.petclinic.web.controller.VetsAtomView"/>

    <!-- Renders an XML view. Used by the BeanNameViewResolver  -->
    <bean name="vets/vetList.xml" class="org.springframework.web.servlet.view.xml.MarshallingView">
        <property name="marshaller" ref="marshaller"/>
    </bean>

    <oxm:jaxb2-marshaller id="marshaller">
        <!-- Object-XML mapping declared using annotations inside 'Vets' -->
        <oxm:class-to-be-bound name="com.javachen.examples.springmvc.petclinic.model.support.Vets"/>
    </oxm:jaxb2-marshaller>

</beans>
